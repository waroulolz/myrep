source('C:/Users/GG/Desktop/Mémoire/myrep/mémoire.R', echo=TRUE)
source('C:/Users/GG/Desktop/Mémoire/myrep/mémoire.R', echo=TRUE)
install.packages('plotly')
library(plotly)
plotly(df$highPrice)
plot(df$highPrice, type = 'l')
library(plotly)
library(ggplotly)
install.packages('ggplotly')
source('C:/Users/GG/Desktop/Mémoire/myrep/mémoire.R', echo=TRUE)
df.summary()
summary(df)
str(df)
dim(df)
model <- lm(highPrice ~ date, df)
# Add the fitted line
abline(model)
model
summary(model)
model <- lm(date ~ highPrice, df)
summary(model)
model <- lm(date ~ highPrice, df)
model <- lm(highPrice ~ date, df)
abline(model)
plot(model)
model <- lm(highPrice, df)
model <- lm(highPrice, data = df)
model <- lm(df$highPrice, df)
model <- lm(df$highPrice)
m <- lm(yy~poly(xx, 1), data=data.frame(xx=index(df),yy=coredata(df$highPrice)[,1]))
index(df)
df$date
m <- lm(yy~poly(xx, 1), data=data.frame(xx=df$date,yy=coredata(df$highPrice)[,1]))
m <- lm(yy~poly(xx, 1), data=data.frame(xx=df$date,yy=df$highPrice))
1:100
c(1:100)
m <- lm(yy~poly(xx, 1), data=data.frame(xx=c(1:100),yy=df$highPrice))
df.dim
dim(df)
nrow(df)
m <- lm(yy~poly(xx, 1), data=data.frame(xx=c(1:nrow(df)),yy=df$highPrice))
summary(m)
plot(df$highPrice, type = 'l')
abline(m)
m <- lm(yy~poly(xx, 3), data=data.frame(xx=c(1:nrow(df)),yy=df$highPrice))
abline(m)
m <- lm(yy~poly(xx, 2), data=data.frame(xx=c(1:nrow(df)),yy=df$highPrice))
abline(m)
m <- lm(yy~poly(xx, 1), data=data.frame(xx=c(1:nrow(df)),yy=df$highPrice))
abline(m)
m
lines(m)
lines(m, c(1:nrow(df)))
pred <- predict(m, df)
dd <- data.frame(xx=c(1:nrow(df)),yy=df$highPrice)
m <- lm(yy~poly(xx, 1), data=dd)
pred <- predict(m, dd)
points(dd$X, pred, col = "blue", pch=4)
lines(pred)
library(e1071)
install.packages('e1071')
library(e1071)
model <- svm(highPrice ~ date , df)
dataDirectory <- "C:/Users/GG/Desktop/Mémoire/myrep/"
df <- read.csv(paste(dataDirectory, 'histoCAC40_2Y.CSV', sep=""))
head(df)
str(df)
df$date <- as.Date(df$date)
df$date
plot(df$highPrice, type = 'l')
index(df)
df.index()
str(df)
plot(df$highPrice  ~df$date, type = 'l')
rownames(df) <- df$date
head(df)
head(df, 5)
head(df, 50)
tail(df, 50)
df[order(as.Date(df$date, format="%y/%m/%d")),]
head(df[order(as.Date(df$date, format="%y/%m/%d")),])
head(df[order(as.Date(df$date, format="%y/%m/%d")),],50)
df[df$iid == 1013557]
dim(df[df$iid == 1013557,])
dim(df[df$iid == 1013552,])
df
df = df[order(as.Date(df$date, format="%y/%m/%d")),]
df
dim(df)
df = df[df$iid == 1013557,]
df = df[order(as.Date(df$date, format="%y/%m/%d")),]
dim(df)
df
plot(df$highPrice  ~df$date, type = 'l')
plot(df$highPrice, type = 'l')
plot(df$highPrice  ~df$date, type = 'l')
df <- data
df$date <- as.Date(df$date)
dataDirectory <- "C:/Users/GG/Desktop/Mémoire/myrep/"
data <- read.csv(paste(dataDirectory, 'histoCAC40_2Y.CSV', sep=""))
df <- data
df$date <- as.Date(df$date)
df = df[df$iid == 1013552,]
df = df[order(as.Date(df$date, format="%y/%m/%d")),]
df
plot(df$highPrice  ~df$date, type = 'l')
model <- lm(highPrice ~ date, df)
abline(model)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "blue", pch=4)
points(df$date, predictedY, col = "blue", pch=3)
rmse <- function(error)
{
sqrt(mean(error^2))
}
model$residuals
residuals(model)
predictionRMSE <- rmse(error)
error <- model$residuals
predictionRMSE <- rmse(error)
predictionRMSE
library(e1071)
model <- svm(highPrice ~ date, df)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "red", pch=4)
error <- data$highPrice - predictedY
svrPredictionRMSE <- rmse(error)
svrPredictionRMSE
predictionRMSE
error
data$highPrice
error <- df$highPrice - predictedY
svrPredictionRMSE <- rmse(error)
svrPredictionRMSE
predictionRMSE
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0,1,0.1), cost = 2^(2:9))
)
tuneResult
svrPredictionRMSE
plot(tuneResult)
sqrt(4.11081)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0,0.4,0.05), cost = 2^(2:4)))
print(tuneResult)
ranges = list(epsilon = seq(0,0.4,0.05), cost = 2^(2:12)))
ranges = list(epsilon = seq(0,0.4,0.05), cost = 2^(2:12)))
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0,0.4,0.05), cost = 2^(2:12)))
print(tuneResult)
)
)
plot(tuneResult)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0,0.3,0.05), cost = 2^(10:16)))
print(tuneResult)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0.1,0.25,0.05), cost = 2^(11:15)))
print(tuneResult)
plot(tuneResult)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0.15,0.25,0.1), cost = 2^(14:16)))
print(tuneResult)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0.15,0.20,0.1), cost = 2^(17)))
print(tuneResult)
plot(tuneResult)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0.13), cost = 2^(17)))
print(tuneResult)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0.13, 0.14, 0.01), cost = 2^(17)))
print(tuneResult)
tunedModel <- tuneResult$best.model
tunedModelY <- predict(tunedModel, df)
error <- df$highPrice - tunedModelY
tunedModelRMSE <- rmse(error)
tunedModelRMSE
plot(df$highPrice  ~df$date, type = 'l')
points(df$date, predictedY, col = "blue", pch=4)
points(df$date, tunedModelY, col = "red", pch=4)
tuneResult <- tune(svm, highPrice ~ date,  data = df,
ranges = list(epsilon = seq(0.1, 0.3, 0.1), cost = 2^(2:4)))
print(tuneResult)
plot(tuneResult)
tunedModel <- tuneResult$best.model
tunedModelY <- predict(tunedModel, df)
error <- df$highPrice - tunedModelY
tunedModelRMSE <- rmse(error)
plot(df$highPrice  ~df$date, type = 'l')
points(df$date, predictedY, col = "blue", pch=4)
points(df$date, tunedModelY, col = "red", pch=4)
df$date[length(dd$date)]]
df$date[length(dd$date)]
df$date[length(dd$date)-1]
df$date[0]
df$date[1]
df$date[2]
df$date[444]
length(dd$Date)
length(dd$date)
length(df$date)
df$date[length(df$date)]
lastDay <- df$date[length(df$date)]
forecastRange <- seq(as.POSIXct(as.Date(lastDay)+1), as.POSIXct(as.Date(lastDay)+30), "day")
model <- svm(highPrice ~ date, newdata = data.frame(x=forecastRange))
pred <- predict(model, newdata = data.frame(x=forecastRange))
data.frame(x=forecastRange)
model
pred <- predict(model, newdata = data.frame(x=forecastRange))
data.frame(x=forecastRange)
pred <- predict(model, newdata = data.frame(x=forecastRange))
model
lm(highPrice ~ date, df)
pred <- predict(lm(highPrice ~ date, df), newdata = data.frame(x=forecastRange))
mod <- lm(highPrice ~ date, df)
pred <- predict(mod, newdata = data.frame(x=forecastRange))
data.frame(x=forecastRange)
pred <- predict(mod, newdata = data.frame(xx=forecastRange))
df
pred <- predict(mod, newdata = data.frame(xx=forecastRange))
pred <- predict(model, newdata = data.frame(xx=forecastRange))
pred <- predict(mod, newdata = data.frame(xx=forecastRange))
model <- svm(highPrice ~ date, df)
predictedY <- predict(model, df)
pred <- predict(model, newdata = data.frame(xx=forecastRange))
forecastRange <- as.Date(seq(as.POSIXct(as.Date(lastDay)+1), as.POSIXct(as.Date(lastDay)+30), "day"))
forecastRange
mod <- lm(highPrice ~ date, df)
pred <- predict(model, newdata = data.frame(xx=forecastRange))
pred <- predict(mod, newdata = data.frame(xx=forecastRange))
mod <- svm(highPrice ~ date, df)
pred <- predict(mod, newdata = data.frame(xx=forecastRange))
pred <- predict(mod, newdata = data.frame(date=forecastRange))
lines(pred)
lines(pred~forecastRange)
lines(pred~forecastRange, col=5)
lines(pred~forecastRange, col=4)
lines(pred~forecastRange, col=2)
lines(pred~forecastRange, col=3)
lines(pred~forecastRange, col=3, pch=4)
points(pred~forecastRange, col=3, pch=4)
plot(df$highPrice  ~df$date, type = 'l')
points(df$date, predictedY, col = "blue", pch=1)
plot(df$highPrice  ~df$date, type = 'l')
points(df$date, predictedY, col = "blue", pch=2)
points(df$date, predictedY, col = "blue", pch=3)
plot(df$highPrice  ~df$date, type = 'l')
points(df$date, predictedY, col = "blue", pch=3)
points(df$date, predictedY, col = "blue")
plot(df$highPrice  ~df$date, type = 'l')
points(df$date, predictedY, col = "blue")
points(df$date, predictedY, col = "blue", type='l')
plot(df$highPrice  ~df$date, type = 'l')
points(df$date, predictedY, col = "blue", type='l')
points(df$date, predictedY, col = "blue", type='l', lwd=2)
points(df$date, predictedY, col = "red", type='l', lwd=2)
points(df$date, predictedY, col = "blue", type='l', lwd=2)
model <- svm(highPrice ~ date, df)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "red", type='l', lwd=2)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "blue", type='l', lwd=2)
error <- model$residuals
predictionRMSE <- rmse(error)
model <- lm(highPrice ~ date, df)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "blue", type='l', lwd=2)
abline(model)
plot(df$highPrice  ~df$date, type = 'l')
model <- lm(highPrice ~ date, df)
abline(model)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "blue", type='l', lwd=2)
rmse <- function(error)
{
sqrt(mean(error^2))
}
error <- model$residuals
predictionRMSE <- rmse(error)
model <- svm(highPrice ~ date, df)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "red", type='l', lwd=2)
error <- df$highPrice - predictedY
svrPredictionRMSE <- rmse(error)
# perform a grid search
tunedModel <- tuneResult$best.model
tunedModelY <- predict(tunedModel, df)
error <- df$highPrice - tunedModelY
tunedModelRMSE <- rmse(error)
points(df$date, tunedModelY, col = "red", pch=4)
points(df$date, tunedModelY, col = "red", type='l', lwd=2)
model <- lm(highPrice ~ date, df)
plot(df$highPrice  ~df$date, type = 'l')
model <- lm(highPrice ~ date, df)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "blue", type='l', lwd=2)
rmse <- function(error)
{
sqrt(mean(error^2))
}
error <- model$residuals
predictionRMSE <- rmse(error)
model <- svm(highPrice ~ date, df)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "red", type='l', lwd=2)
points(df$date, tunedModelY, col = "green", type='l', lwd=2)
lastDay <- df$date[length(df$date)]
forecastRange <- as.Date(seq(as.POSIXct(as.Date(lastDay)+1), as.POSIXct(as.Date(lastDay)+30), "day"))
mod <- svm(highPrice ~ date, df)
pred <- predict(mod, newdata = data.frame(date=forecastRange))
points(pred~forecastRange, col=3, pch=4)
points(pred~forecastRange, col=3, type='l', lwd=2)
plot(df$highPrice  ~df$date, type = 'l')
model <- lm(highPrice ~ date, df)
abline(model)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "blue", type='l', lwd=2)
rmse <- function(error)
{
sqrt(mean(error^2))
}
error <- model$residuals
predictionRMSE <- rmse(error)
model <- svm(highPrice ~ date, df)
predictedY <- predict(model, df)
points(df$date, predictedY, col = "red", type='l', lwd=2)
error <- df$highPrice - predictedY
svrPredictionRMSE <- rmse(error)
# perform a grid search
tunedModel <- tuneResult$best.model
tunedModelY <- predict(tunedModel, df)
error <- df$highPrice - tunedModelY
tunedModelRMSE <- rmse(error)
points(df$date, tunedModelY, col = "green", type='l', lwd=2)
lastDay <- df$date[length(df$date)]
forecastRange <- as.Date(seq(as.POSIXct(as.Date(lastDay)+1), as.POSIXct(as.Date(lastDay)+30), "day"))
mod <- svm(highPrice ~ date, df)
pred <- predict(mod, newdata = data.frame(date=forecastRange))
points(pred~forecastRange, col=3, type='l', lwd=2)
points(pred~forecastRange, col=5, type='l', lwd=2)
points(pred~forecastRange, col=6, type='l', lwd=2)
pred <- predict(tunedModel, newdata = data.frame(date=forecastRange))
points(pred~forecastRange, col=6, type='l', lwd=2)
